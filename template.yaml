AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: sam-app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  DynamoDbWriter:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: thundra-aws-workshop-demo-project/thundra-workshop-lambda-dynamodb-writer/src/
      Handler: index.handler
      Runtime: nodejs14.x
      Events:
        SNSEvent:
          Type: SNS
          Properties:
            Topic: !Ref SnsTopic
      Environment:
        Variables:
          AWS_DYNAMODB_TABLE_NAME:
            !Select [1, !Split ["/", !GetAtt DynamoDBTable.Arn]]
      Policies:
        - DynamoDBCrudPolicy:
            TableName: "*"

  SnsWriter:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: thundra-aws-workshop-demo-project/thundra-workshop-lambda-sns-writer/src/
      Handler: index.handler
      Runtime: nodejs14.x
      Policies:
        - SNSCrudPolicy:
            TopicName: "*"
        - S3ReadPolicy:
            BucketName: "*"
      Environment:
        Variables:
          AWS_S3_BUCKET_NAME: !Ref SrcBucket
          AWS_SNS_TOPIC_ARN: !Ref SnsTopic
          DYNAMODB_WRITER_LAMBDA_ARN: !GetAtt DynamoDbWriter.Arn #arn:aws:lambda:us-west-2::function:DynamoDbWriter
      Events:
        HttpPost:
          Type: Api
          Properties:
            Method: post
            Path: /

  WebContentRetriever:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: thundra-aws-workshop-demo-project/thundra-workshop-lambda-webcontent-retriever/src/
      Handler: index.handler
      Runtime: nodejs14.x
      Policies:
        - DynamoDBCrudPolicy:
            TableName: "*"
        - S3ReadPolicy:
            BucketName: "*"
      Environment:
        Variables:
          DYNAMODB_TABLE_NAME:
            !Select [1, !Split ["/", !GetAtt DynamoDBTable.Arn]]
          S3_BUCKET_NAME: !Ref SrcBucket
      Events:
        GetContent:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: get
  SnsTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: "thundra-workshop-lambda-sns-topic"
      TopicName: "thundra-workshop-lambda-sns-topic"

  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  SrcBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete

   
Outputs:
  S3Bucket:
    Description: "The bucket's name that we will store static web content in it"
    Value: !Ref SrcBucket
  WebContentRetrieverApi:
    Description: "API Gateway endpoint URL for Web Content Retriever function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"
  SnsWriter:
    Description: "API Gateway endpoint URL for Sns Writer function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod" 